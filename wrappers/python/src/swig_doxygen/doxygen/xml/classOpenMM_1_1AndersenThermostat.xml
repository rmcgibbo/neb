<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1AndersenThermostat" kind="class" prot="public">
    <compoundname>OpenMM::AndersenThermostat</compoundname>
    <basecompoundref refid="classOpenMM_1_1Force" prot="public" virt="non-virtual">OpenMM::Force</basecompoundref>
    <includes refid="AndersenThermostat_8h" local="no">AndersenThermostat.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1AndersenThermostat_1a320a358685764becd92c1fa856330e8e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::AndersenThermostat::defaultTemp</definition>
        <argsstring></argsstring>
        <name>defaultTemp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="105" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AndersenThermostat_1a8ac597fdc017d1e3c79ec51249c2eda0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::AndersenThermostat::defaultFreq</definition>
        <argsstring></argsstring>
        <name>defaultFreq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="105" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AndersenThermostat_1af904606d5502eb9c49a67158f69b4658" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::AndersenThermostat::randomNumberSeed</definition>
        <argsstring></argsstring>
        <name>randomNumberSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="106" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1acc74c72164403cd0e216a41a91a6dce0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; OpenMM::AndersenThermostat::Temperature</definition>
        <argsstring>()</argsstring>
        <name>Temperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the name of the parameter which stores the current temperature of the heat bath (in Kelvin). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="51" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1ab1bd05d2e4e9524859af565d80d08eee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; OpenMM::AndersenThermostat::CollisionFrequency</definition>
        <argsstring>()</argsstring>
        <name>CollisionFrequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the name of the parameter which store the current collision frequency (in 1/ps). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="58" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="58" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1afa68f61f2816f34ec88035fa26d1fcca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::AndersenThermostat::AndersenThermostat</definition>
        <argsstring>(double defaultTemperature, double defaultCollisionFrequency)</argsstring>
        <name>AndersenThermostat</name>
        <param>
          <type>double</type>
          <declname>defaultTemperature</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultCollisionFrequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an <ref refid="classOpenMM_1_1AndersenThermostat" kindref="compound">AndersenThermostat</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>defaultTemperature</parametername>
</parameternamelist>
<parameterdescription>
<para>the default temperature of the heat bath (in Kelvin) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultCollisionFrequency</parametername>
</parameternamelist>
<parameterdescription>
<para>the default collision frequency (in 1/ps) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1a708c5f6e6f7d5ccc3cbfe9f147dfa437" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::AndersenThermostat::getDefaultTemperature</definition>
        <argsstring>() const </argsstring>
        <name>getDefaultTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default temperature of the heat bath (in Kelvin).</para><para><simplesect kind="return"><para>the default temperature of the heat bath, measured in Kelvin. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="74" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1a0b932567bb8108417b55659394ba68eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::AndersenThermostat::getDefaultCollisionFrequency</definition>
        <argsstring>() const </argsstring>
        <name>getDefaultCollisionFrequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default collision frequency (in 1/ps).</para><para><simplesect kind="return"><para>the default collision frequency, measured in 1/ps. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="82" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1a33cc1b7d7ecdef3664eac6811fc4ee99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AndersenThermostat::getRandomNumberSeed</definition>
        <argsstring>() const </argsstring>
        <name>getRandomNumberSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the random number seed. See <ref refid="classOpenMM_1_1AndersenThermostat_1ac52c067d563b0cd6c02ddff87c47a6be" kindref="member">setRandomNumberSeed()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="88" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1ac52c067d563b0cd6c02ddff87c47a6be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AndersenThermostat::setRandomNumberSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>setRandomNumberSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the random number seed. The precise meaning of this parameter is undefined, and is left up to each <ref refid="classOpenMM_1_1Platform" kindref="compound">Platform</ref> to interpret in an appropriate way. It is guaranteed that if two simulations are run with different random number seeds, the sequence of collisions will be different. On the other hand, no guarantees are made about the behavior of simulations that use the same seed. In particular, Platforms are permitted to use non-deterministic algorithms which produce different results on successive runs, even if those runs were initialized identically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="99" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1AndersenThermostat_1a21c71297ddb5d066179a6da84fe6e8ea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> *</type>
        <definition>ForceImpl* OpenMM::AndersenThermostat::createImpl</definition>
        <argsstring>()</argsstring>
        <name>createImpl</name>
        <reimplements refid="classOpenMM_1_1Force_1ac110723f39368f7eeb0dbb2105771255">createImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created, it invokes this method on each <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. It should create a new <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> object which can be used by the context for calculating forces. The <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> will be deleted automatically when the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class uses the Andersen method to maintain constant temperature. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="89">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="88">
        <label>OpenMM::AndersenThermostat</label>
        <link refid="classOpenMM_1_1AndersenThermostat"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="91">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="90">
        <label>OpenMM::AndersenThermostat</label>
        <link refid="classOpenMM_1_1AndersenThermostat"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" line="45" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/AndersenThermostat.h" bodystart="45" bodyend="107"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1AndersenThermostat_1afa68f61f2816f34ec88035fa26d1fcca" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>AndersenThermostat</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1ab1bd05d2e4e9524859af565d80d08eee" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>CollisionFrequency</name></member>
      <member refid="classOpenMM_1_1Force_1a7e2f3e20ff3f49ee3b9c0e529422b663" prot="protected" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>ContextImpl</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a21c71297ddb5d066179a6da84fe6e8ea" prot="protected" virt="virtual"><scope>OpenMM::AndersenThermostat</scope><name>createImpl</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a8ac597fdc017d1e3c79ec51249c2eda0" prot="private" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>defaultFreq</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a320a358685764becd92c1fa856330e8e" prot="private" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>defaultTemp</name></member>
      <member refid="classOpenMM_1_1Force_1a40e75e251ec93d3bc9fc87b96026fbc2" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>Force</name></member>
      <member refid="classOpenMM_1_1Force_1aa6d1d0fd8cad61e7ea37305c6d13a10d" prot="protected" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getContextImpl</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a0b932567bb8108417b55659394ba68eb" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getDefaultCollisionFrequency</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a708c5f6e6f7d5ccc3cbfe9f147dfa437" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getDefaultTemperature</name></member>
      <member refid="classOpenMM_1_1Force_1a5aca97957c70da1076fcd7cbac340604" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getForceGroup</name></member>
      <member refid="classOpenMM_1_1Force_1a4dead2c44734956400d0ca8619650890" prot="protected" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1a33cc1b7d7ecdef3664eac6811fc4ee99" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>getRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1af904606d5502eb9c49a67158f69b4658" prot="private" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>randomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Force_1a53e3829a91825a9f6aa17e5ade713f84" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>setForceGroup</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1ac52c067d563b0cd6c02ddff87c47a6be" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>setRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1AndersenThermostat_1acc74c72164403cd0e216a41a91a6dce0" prot="public" virt="non-virtual"><scope>OpenMM::AndersenThermostat</scope><name>Temperature</name></member>
      <member refid="classOpenMM_1_1Force_1a6516b32ebeb95a694f56d93bdf81f4fb" prot="public" virt="virtual"><scope>OpenMM::AndersenThermostat</scope><name>~Force</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
