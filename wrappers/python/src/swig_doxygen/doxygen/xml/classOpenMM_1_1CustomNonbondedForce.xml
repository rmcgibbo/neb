<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1CustomNonbondedForce" kind="class" prot="public">
    <compoundname>OpenMM::CustomNonbondedForce</compoundname>
    <basecompoundref refid="classOpenMM_1_1Force" prot="public" virt="non-virtual">OpenMM::Force</basecompoundref>
    <includes refid="CustomNonbondedForce_8h" local="no">CustomNonbondedForce.h</includes>
    <innerclass refid="classOpenMM_1_1CustomNonbondedForce_1_1ExclusionInfo" prot="private">OpenMM::CustomNonbondedForce::ExclusionInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomNonbondedForce_1_1FunctionInfo" prot="private">OpenMM::CustomNonbondedForce::FunctionInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomNonbondedForce_1_1GlobalParameterInfo" prot="private">OpenMM::CustomNonbondedForce::GlobalParameterInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomNonbondedForce_1_1ParticleInfo" prot="private">OpenMM::CustomNonbondedForce::ParticleInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomNonbondedForce_1_1PerParticleParameterInfo" prot="private">OpenMM::CustomNonbondedForce::PerParticleParameterInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8f" prot="public" static="no">
        <name>NonbondedMethod</name>
        <enumvalue id="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fa062bd34990d0b5b0de303e8b26315c7c" prot="public">
          <name>NoCutoff</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No cutoff is applied to nonbonded interactions. The full set of N^2 interactions is computed exactly. This necessarily means that periodic boundary conditions cannot be used. This is the default. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fad934e3d58ed39dcb6e7e16eb851c1a8d" prot="public">
          <name>CutoffNonPeriodic</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interactions beyond the cutoff distance are ignored. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fa351b557a382884ce52e19b4d39410971" prot="public">
          <name>CutoffPeriodic</name>
          <initializer> 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Periodic boundary conditions are used, so that each particle interacts only with the nearest periodic copy of each other particle. Interactions beyond the cutoff distance are ignored. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enumeration of the different methods that may be used for handling long range nonbonded forces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="98" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="98" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1a791f795c62309f0588c7cb183a8560cb" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8f" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::CustomNonbondedForce::nonbondedMethod</definition>
        <argsstring></argsstring>
        <name>nonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="337" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1aac286c0dde879b182cb31e4bec8c45dd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::CustomNonbondedForce::cutoffDistance</definition>
        <argsstring></argsstring>
        <name>cutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="338" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1ac70e571a2e88778c6453423f8ab12bb5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OpenMM::CustomNonbondedForce::energyExpression</definition>
        <argsstring></argsstring>
        <name>energyExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="339" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1a6d36a9047ae4dbf7ba2c72dc0b5ac7e8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PerParticleParameterInfo &gt;</type>
        <definition>std::vector&lt;PerParticleParameterInfo&gt; OpenMM::CustomNonbondedForce::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="340" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1ae9ad747d88747c45f7f7514efffea869" prot="private" static="no" mutable="no">
        <type>std::vector&lt; GlobalParameterInfo &gt;</type>
        <definition>std::vector&lt;GlobalParameterInfo&gt; OpenMM::CustomNonbondedForce::globalParameters</definition>
        <argsstring></argsstring>
        <name>globalParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="341" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1ae692577cb1ffd3dc78a3673ca8fda26e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ParticleInfo &gt;</type>
        <definition>std::vector&lt;ParticleInfo&gt; OpenMM::CustomNonbondedForce::particles</definition>
        <argsstring></argsstring>
        <name>particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="342" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1a17c5c75683509da36972c37837a4feba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ExclusionInfo &gt;</type>
        <definition>std::vector&lt;ExclusionInfo&gt; OpenMM::CustomNonbondedForce::exclusions</definition>
        <argsstring></argsstring>
        <name>exclusions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="343" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomNonbondedForce_1acb62f6a6bb7d013036857d1d31a3a85c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; FunctionInfo &gt;</type>
        <definition>std::vector&lt;FunctionInfo&gt; OpenMM::CustomNonbondedForce::functions</definition>
        <argsstring></argsstring>
        <name>functions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="344" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a143f5ccfd304c80af72d7fa2c0a3eae4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CustomNonbondedForce::CustomNonbondedForce</definition>
        <argsstring>(const std::string &amp;energy)</argsstring>
        <name>CustomNonbondedForce</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1CustomNonbondedForce" kindref="compound">CustomNonbondedForce</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>energy</parametername>
</parameternamelist>
<parameterdescription>
<para>an algebraic expression giving the interaction energy between two particles as a function of r, the distance between them, as well as any global and per-particle parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a26b77ea432fb70450dbd1dc1b9e8f494" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::getNumParticles</definition>
        <argsstring>() const </argsstring>
        <name>getNumParticles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of particles for which force field parameters have been defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="124" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1ac3370921b201de564fdb8318581a05c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::getNumExclusions</definition>
        <argsstring>() const </argsstring>
        <name>getNumExclusions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of particle pairs whose interactions should be excluded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="130" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a1329a7cfe2752839e2d26510cb58afc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::getNumPerParticleParameters</definition>
        <argsstring>() const </argsstring>
        <name>getNumPerParticleParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of per-particle parameters that the interaction depends on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="136" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a64e4d96adea92de1d2c2aafec2b947c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::getNumGlobalParameters</definition>
        <argsstring>() const </argsstring>
        <name>getNumGlobalParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of global parameters that the interaction depends on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="142" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a4cff5238a7a2bb55f84af0e4f0a1cd2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::getNumFunctions</definition>
        <argsstring>() const </argsstring>
        <name>getNumFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of tabulated functions that have been defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="148" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a8d07fa6afe8e372651a7068198f9e6cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; OpenMM::CustomNonbondedForce::getEnergyFunction</definition>
        <argsstring>() const </argsstring>
        <name>getEnergyFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the algebraic expression that gives the interaction energy between two particles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a41987685c21dfa0196a7c53b3a352c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setEnergyFunction</definition>
        <argsstring>(const std::string &amp;energy)</argsstring>
        <name>setEnergyFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the algebraic expression that gives the interaction energy between two particles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="158"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1abf9977d8151acb7425cdfe0e9d1886fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8f" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::CustomNonbondedForce::getNonbondedMethod</definition>
        <argsstring>() const </argsstring>
        <name>getNonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the method used for handling long range nonbonded interactions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a23afd01c66c17aa73f0038dcf234c606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setNonbondedMethod</definition>
        <argsstring>(NonbondedMethod method)</argsstring>
        <name>setNonbondedMethod</name>
        <param>
          <type><ref refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8f" kindref="member">NonbondedMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the method used for handling long range nonbonded interactions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a45845acf1322b597946418c10c44ea27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::CustomNonbondedForce::getCutoffDistance</definition>
        <argsstring>() const </argsstring>
        <name>getCutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para><para><simplesect kind="return"><para>the cutoff distance, measured in nm </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="173"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a58dcbe0a510f4305ddb5e2223200c257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setCutoffDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setCutoffDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>the cutoff distance, measured in nm </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="180"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a10fb22a057673d72c9d3e7f173a27c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::addPerParticleParameter</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>addPerParticleParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new per-particle parameter that the interaction may depend on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the parameter that was added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="187"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1aae5d8bc7655e13edbc478cc086626ddd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; OpenMM::CustomNonbondedForce::getPerParticleParameterName</definition>
        <argsstring>(int index) const </argsstring>
        <name>getPerParticleParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a per-particle parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="194"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1af6b7d517318e2969dc276557375949a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setPerParticleParameterName</definition>
        <argsstring>(int index, const std::string &amp;name)</argsstring>
        <name>setPerParticleParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of a per-particle parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="201"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a1584bbf0ae0c5f58742039df77d8cbb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::addGlobalParameter</definition>
        <argsstring>(const std::string &amp;name, double defaultValue)</argsstring>
        <name>addGlobalParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new global parameter that the interaction may depend on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value of the parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the parameter that was added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a79afe0bf7aea33c20d6945aa72141422" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; OpenMM::CustomNonbondedForce::getGlobalParameterName</definition>
        <argsstring>(int index) const </argsstring>
        <name>getGlobalParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a global parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="216"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a28629dd168467afbed7145ffffbb6a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setGlobalParameterName</definition>
        <argsstring>(int index, const std::string &amp;name)</argsstring>
        <name>setGlobalParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of a global parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a30ea249eae57ceb2a54b22d2f8d43b09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::CustomNonbondedForce::getGlobalParameterDefaultValue</definition>
        <argsstring>(int index) const </argsstring>
        <name>getGlobalParameterDefaultValue</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default value of a global parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the default value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter default value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="230"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a93b034a2139f302d98b09bd150d62353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setGlobalParameterDefaultValue</definition>
        <argsstring>(int index, double defaultValue)</argsstring>
        <name>setGlobalParameterDefaultValue</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default value of a global parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the default value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value of the parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1aee6c7aa25a0039d59eb9199c16c2fcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::addParticle</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;parameters)</argsstring>
        <name>addParticle</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the nonbonded force parameters for a particle. This should be called once for each particle in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. When it is called for the i&apos;th time, it specifies the parameters for the i&apos;th particle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of parameters for the new particle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the particle that was added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a841be7e6744adc7c6c6d23067b28785e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::getParticleParameters</definition>
        <argsstring>(int index, std::vector&lt; double &gt; &amp;parameters) const </argsstring>
        <name>getParticleParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the nonbonded force parameters for a particle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle for which to get parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of parameters for the specified particle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="252"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a133e3517ee6fb3da086612c1efc97d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setParticleParameters</definition>
        <argsstring>(int index, const std::vector&lt; double &gt; &amp;parameters)</argsstring>
        <name>setParticleParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the nonbonded force parameters for a particle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle for which to set parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of parameters for the specified particle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="259"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1ad3759bd8ceef1d99a3bc733c2c54fb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::addExclusion</definition>
        <argsstring>(int particle1, int particle2)</argsstring>
        <name>addExclusion</name>
        <param>
          <type>int</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a particle pair to the list of interactions that should be excluded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle in the pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle in the pair </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the exclusion that was added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="267"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a9b5a18d005a8c434ba323670b51ea514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::getExclusionParticles</definition>
        <argsstring>(int index, int &amp;particle1, int &amp;particle2) const </argsstring>
        <name>getExclusionParticles</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>particle2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the particles in a pair whose interaction should be excluded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the exclusion for which to get particle indices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle in the pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle in the pair </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="275"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a64fc1b0a33d8de6641e6d1035815f856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setExclusionParticles</definition>
        <argsstring>(int index, int particle1, int particle2)</argsstring>
        <name>setExclusionParticles</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the particles in a pair whose interaction should be excluded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the exclusion for which to set particle indices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle in the pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle in the pair </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="283"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a728b7c634e665b753249939007efd1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomNonbondedForce::addFunction</definition>
        <argsstring>(const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</argsstring>
        <name>addFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a tabulated function that may appear in the energy expression.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the function as it appears in expressions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. The function is assumed to be zero for x &lt; min or x &gt; max. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the first element of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the last element of values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the function that was added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="294"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a3339e287ed5b0cddb6ec5e1ab5fba660" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::getFunctionParameters</definition>
        <argsstring>(int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const </argsstring>
        <name>getFunctionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters for a tabulated function that may appear in the energy expression.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the function for which to get parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the function as it appears in expressions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. The function is assumed to be zero for x &lt; min or x &gt; max. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the first element of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the last element of values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="305"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a7aedd5adf90d6229e51e60a83b647044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::setFunctionParameters</definition>
        <argsstring>(int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</argsstring>
        <name>setFunctionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the parameters for a tabulated function that may appear in algebraic expressions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the function for which to set parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the function as it appears in expressions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. The function is assumed to be zero for x &lt; min or x &gt; max. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the first element of values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the independent variable corresponding to the last element of values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="316"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a642ebfd4353ec353205172a244003795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomNonbondedForce::updateParametersInContext</definition>
        <argsstring>(Context &amp;context)</argsstring>
        <name>updateParametersInContext</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the per-particle parameters in a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> to match those stored in this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object. This method provides an efficient method to update certain parameters in an existing <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> without needing to reinitialize it. Simply call <ref refid="classOpenMM_1_1CustomNonbondedForce_1a133e3517ee6fb3da086612c1efc97d1d" kindref="member">setParticleParameters()</ref> to modify this object&apos;s parameters, then call updateParametersInState() to copy them over to the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para><para>This method has several limitations. The only information it updates is the values of per-particle parameters. All other aspects of the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> (the energy function, nonbonded method, cutoff distance, etc.) are unaffected and can only be changed by reinitializing the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. Also, this method cannot be used to add new particles, only to change the parameters of existing ones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="328"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1CustomNonbondedForce_1a8c36197b6900c978c796fa5090f0363a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> *</type>
        <definition>ForceImpl* OpenMM::CustomNonbondedForce::createImpl</definition>
        <argsstring>()</argsstring>
        <name>createImpl</name>
        <reimplements refid="classOpenMM_1_1Force_1ac110723f39368f7eeb0dbb2105771255">createImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created, it invokes this method on each <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. It should create a new <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> object which can be used by the context for calculating forces. The <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> will be deleted automatically when the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="330"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements nonbonded interactions between particles. Unlike <ref refid="classOpenMM_1_1NonbondedForce" kindref="compound">NonbondedForce</ref>, the functional form of the interaction is completely customizable, and may involve arbitrary algebraic expressions and tabulated functions. It may depend on the distance between particles, as well as on arbitrary global and per-particle parameters. It also optionally supports periodic boundary conditions and cutoffs for long range interactions.</para><para>To use this class, create a <ref refid="classOpenMM_1_1CustomNonbondedForce" kindref="compound">CustomNonbondedForce</ref> object, passing an algebraic expression to the constructor that defines the interaction energy between each pair of particles. The expression may depend on r, the distance between the particles, as well as on any parameters you choose. Then call <ref refid="classOpenMM_1_1CustomNonbondedForce_1a10fb22a057673d72c9d3e7f173a27c59" kindref="member">addPerParticleParameter()</ref> to define per-particle parameters, and <ref refid="classOpenMM_1_1CustomNonbondedForce_1a1584bbf0ae0c5f58742039df77d8cbb9" kindref="member">addGlobalParameter()</ref> to define global parameters. The values of per-particle parameters are specified as part of the system definition, while values of global parameters may be modified during a simulation by calling <ref refid="classOpenMM_1_1Context_1a368b7f53ee35bb151ee686441b7900af" kindref="member">Context::setParameter()</ref>.</para><para>Next, call <ref refid="classOpenMM_1_1CustomNonbondedForce_1aee6c7aa25a0039d59eb9199c16c2fcfe" kindref="member">addParticle()</ref> once for each particle in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> to set the values of its per-particle parameters. The number of particles for which you set parameters must be exactly equal to the number of particles in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>, or else an exception will be thrown when you try to create a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. After a particle has been added, you can modify its parameters by calling <ref refid="classOpenMM_1_1CustomNonbondedForce_1a133e3517ee6fb3da086612c1efc97d1d" kindref="member">setParticleParameters()</ref>. This will have no effect on Contexts that already exist unless you call <ref refid="classOpenMM_1_1CustomNonbondedForce_1a642ebfd4353ec353205172a244003795" kindref="member">updateParametersInContext()</ref>.</para><para><ref refid="classOpenMM_1_1CustomNonbondedForce" kindref="compound">CustomNonbondedForce</ref> also lets you specify &quot;exclusions&quot;, particular pairs of particles whose interactions should be omitted from force and energy calculations. This is most often used for particles that are bonded to each other.</para><para>As an example, the following code creates a <ref refid="classOpenMM_1_1CustomNonbondedForce" kindref="compound">CustomNonbondedForce</ref> that implements a 12-6 Lennard-Jones potential:</para><para><computeroutput>CustomNonbondedForce* force = new <ref refid="classOpenMM_1_1CustomNonbondedForce" kindref="compound">CustomNonbondedForce</ref>(&quot;4*epsilon*((sigma/r)^12-(sigma/r)^6); sigma=0.5*(sigma1*sigma2); epsilon=sqrt(epsilon1*epsilon2)&quot;);</computeroutput></para><para>This force depends on two parameters: sigma and epsilon. The following code defines these as per-particle parameters:</para><para><computeroutput><preformatted>
 force-&gt;addPerParticleParameter(&quot;sigma&quot;);
 force-&gt;addPerParticleParameter(&quot;epsilon&quot;);
 </preformatted></computeroutput></para><para>The expression <emphasis>must</emphasis> be symmetric with respect to the two particles. It typically will only be evaluated once for each pair of particles, and no guarantee is made about which particle will be identified as &quot;particle 1&quot;. In the above example, the energy only depends on the products sigma1*sigma2 and epsilon1*epsilon2, both of which are unchanged if the labels 1 and 2 are reversed. In contrast, if it depended on the difference sigma1-sigma2, the results would be undefined, because reversing the labels 1 and 2 would change the energy.</para><para>Expressions may involve the operators + (add), - (subtract), * (multiply), / (divide), and ^ (power), and the following functions: sqrt, exp, log, sin, cos, sec, csc, tan, cot, asin, acos, atan, sinh, cosh, tanh, erf, erfc, min, max, abs, step, delta. All trigonometric functions are defined in radians, and log is the natural logarithm. step(x) = 0 if x is less than 0, 1 otherwise. delta(x) = 1 if x is 0, 0 otherwise. The names of per-particle parameters have the suffix &quot;1&quot; or &quot;2&quot; appended to them to indicate the values for the two interacting particles. As seen in the above example, the expression may also involve intermediate quantities that are defined following the main expression, using &quot;;&quot; as a separator.</para><para>In addition, you can call <ref refid="classOpenMM_1_1CustomNonbondedForce_1a728b7c634e665b753249939007efd1a8" kindref="member">addFunction()</ref> to define a new function based on tabulated values. You specify a vector of values, and a natural spline is created from them. That function can then appear in the expression. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="229">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="228">
        <label>OpenMM::CustomNonbondedForce</label>
        <link refid="classOpenMM_1_1CustomNonbondedForce"/>
        <childnode refid="229" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="231">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="230">
        <label>OpenMM::CustomNonbondedForce</label>
        <link refid="classOpenMM_1_1CustomNonbondedForce"/>
        <childnode refid="231" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" line="93" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/CustomNonbondedForce.h" bodystart="93" bodyend="345"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1ad3759bd8ceef1d99a3bc733c2c54fb54" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>addExclusion</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a728b7c634e665b753249939007efd1a8" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>addFunction</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a1584bbf0ae0c5f58742039df77d8cbb9" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>addGlobalParameter</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aee6c7aa25a0039d59eb9199c16c2fcfe" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>addParticle</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a10fb22a057673d72c9d3e7f173a27c59" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>addPerParticleParameter</name></member>
      <member refid="classOpenMM_1_1Force_1a7e2f3e20ff3f49ee3b9c0e529422b663" prot="protected" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>ContextImpl</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a8c36197b6900c978c796fa5090f0363a" prot="protected" virt="virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>createImpl</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a143f5ccfd304c80af72d7fa2c0a3eae4" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>CustomNonbondedForce</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aac286c0dde879b182cb31e4bec8c45dd" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>cutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fad934e3d58ed39dcb6e7e16eb851c1a8d" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>CutoffNonPeriodic</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fa351b557a382884ce52e19b4d39410971" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>CutoffPeriodic</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1ac70e571a2e88778c6453423f8ab12bb5" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>energyExpression</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a17c5c75683509da36972c37837a4feba" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>exclusions</name></member>
      <member refid="classOpenMM_1_1Force_1a40e75e251ec93d3bc9fc87b96026fbc2" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>Force</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1acb62f6a6bb7d013036857d1d31a3a85c" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>functions</name></member>
      <member refid="classOpenMM_1_1Force_1aa6d1d0fd8cad61e7ea37305c6d13a10d" prot="protected" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getContextImpl</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a45845acf1322b597946418c10c44ea27" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getCutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a8d07fa6afe8e372651a7068198f9e6cc" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getEnergyFunction</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a9b5a18d005a8c434ba323670b51ea514" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getExclusionParticles</name></member>
      <member refid="classOpenMM_1_1Force_1a5aca97957c70da1076fcd7cbac340604" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getForceGroup</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a3339e287ed5b0cddb6ec5e1ab5fba660" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getFunctionParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a30ea249eae57ceb2a54b22d2f8d43b09" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getGlobalParameterDefaultValue</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a79afe0bf7aea33c20d6945aa72141422" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getGlobalParameterName</name></member>
      <member refid="classOpenMM_1_1Force_1a4dead2c44734956400d0ca8619650890" prot="protected" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1abf9977d8151acb7425cdfe0e9d1886fd" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1ac3370921b201de564fdb8318581a05c1" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNumExclusions</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a4cff5238a7a2bb55f84af0e4f0a1cd2e" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNumFunctions</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a64e4d96adea92de1d2c2aafec2b947c1" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNumGlobalParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a26b77ea432fb70450dbd1dc1b9e8f494" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNumParticles</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a1329a7cfe2752839e2d26510cb58afc4" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getNumPerParticleParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a841be7e6744adc7c6c6d23067b28785e" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getParticleParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aae5d8bc7655e13edbc478cc086626ddd" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>getPerParticleParameterName</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1ae9ad747d88747c45f7f7514efffea869" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>globalParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8fa062bd34990d0b5b0de303e8b26315c7c" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>NoCutoff</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a791f795c62309f0588c7cb183a8560cb" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>nonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1aeaaa8a021f20549be459597f1ce87a8f" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>NonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a6d36a9047ae4dbf7ba2c72dc0b5ac7e8" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>parameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1ae692577cb1ffd3dc78a3673ca8fda26e" prot="private" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>particles</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a58dcbe0a510f4305ddb5e2223200c257" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setCutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a41987685c21dfa0196a7c53b3a352c40" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setEnergyFunction</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a64fc1b0a33d8de6641e6d1035815f856" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setExclusionParticles</name></member>
      <member refid="classOpenMM_1_1Force_1a53e3829a91825a9f6aa17e5ade713f84" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setForceGroup</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a7aedd5adf90d6229e51e60a83b647044" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setFunctionParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a93b034a2139f302d98b09bd150d62353" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setGlobalParameterDefaultValue</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a28629dd168467afbed7145ffffbb6a81" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setGlobalParameterName</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a23afd01c66c17aa73f0038dcf234c606" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a133e3517ee6fb3da086612c1efc97d1d" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setParticleParameters</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1af6b7d517318e2969dc276557375949a6" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>setPerParticleParameterName</name></member>
      <member refid="classOpenMM_1_1CustomNonbondedForce_1a642ebfd4353ec353205172a244003795" prot="public" virt="non-virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>updateParametersInContext</name></member>
      <member refid="classOpenMM_1_1Force_1a6516b32ebeb95a694f56d93bdf81f4fb" prot="public" virt="virtual"><scope>OpenMM::CustomNonbondedForce</scope><name>~Force</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
