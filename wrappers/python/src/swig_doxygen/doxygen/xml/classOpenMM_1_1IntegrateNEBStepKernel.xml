<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1IntegrateNEBStepKernel" kind="class" prot="public">
    <compoundname>OpenMM::IntegrateNEBStepKernel</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1ac2a4305daa11b36cb997abff01e02b36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string OpenMM::IntegrateNEBStepKernel::Name</definition>
        <argsstring>()</argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="16" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1ac2a4305daa11b36cb997abff01e02b36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string OpenMM::IntegrateNEBStepKernel::Name</definition>
        <argsstring>()</argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="16" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" bodystart="16" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1afd7791e2d60ec4afa3493cde1c2e5631" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OpenMM::IntegrateNEBStepKernel::IntegrateNEBStepKernel</definition>
        <argsstring>(std::string name, const Platform &amp;platform)</argsstring>
        <name>IntegrateNEBStepKernel</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1Platform" kindref="compound">Platform</ref> &amp;</type>
          <declname>platform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="19" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a08ca40d95d1835ef8e2b439b06a931ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::initialize</definition>
        <argsstring>(const System &amp;system, const NEBIntegrator &amp;integrator)=0</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> &amp;</type>
          <declname>system</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> &amp;</type>
          <declname>integrator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the kernel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> this kernel will be applied to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integrator</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> this kernel will be used for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a1f880b395764564fbe2e981ea55bedc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::execute</definition>
        <argsstring>(ContextImpl &amp;context, const NEBIntegrator &amp;integrator, bool forcesAreValid)=0</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> &amp;</type>
          <declname>integrator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forcesAreValid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the kernel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which to execute this kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integrator</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> this kernel is being used for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forcesAreValid</parametername>
</parameternamelist>
<parameterdescription>
<para>if the context has been modified since the last time step, this will be false to show that cached forces are invalid and must be recalculated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1aaa341747dd5ead7aef98e8920d7c4494" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::setPositions</definition>
        <argsstring>(int copy, const std::vector&lt; Vec3 &gt; &amp;positions)=0</argsstring>
        <name>setPositions</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the positions of all particles in one copy of the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a5330bbf8540648329e7c2df260648cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::setVelocities</definition>
        <argsstring>(int copy, const std::vector&lt; Vec3 &gt; &amp;velocities)=0</argsstring>
        <name>setVelocities</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the velocities of all particles in one copy of the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1afbd6eaa463c464604559f0cf51172b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::copyToContext</definition>
        <argsstring>(int copy, ContextImpl &amp;context)=0</argsstring>
        <name>copyToContext</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy positions and velocities for one copy into the context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1afd7791e2d60ec4afa3493cde1c2e5631" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OpenMM::IntegrateNEBStepKernel::IntegrateNEBStepKernel</definition>
        <argsstring>(std::string name, const Platform &amp;platform)</argsstring>
        <name>IntegrateNEBStepKernel</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1Platform" kindref="compound">Platform</ref> &amp;</type>
          <declname>platform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="19" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a08ca40d95d1835ef8e2b439b06a931ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::initialize</definition>
        <argsstring>(const System &amp;system, const NEBIntegrator &amp;integrator)=0</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> &amp;</type>
          <declname>system</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> &amp;</type>
          <declname>integrator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the kernel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> this kernel will be applied to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integrator</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> this kernel will be used for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a1f880b395764564fbe2e981ea55bedc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::execute</definition>
        <argsstring>(ContextImpl &amp;context, const NEBIntegrator &amp;integrator, bool forcesAreValid)=0</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> &amp;</type>
          <declname>integrator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forcesAreValid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the kernel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which to execute this kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integrator</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1NEBIntegrator" kindref="compound">NEBIntegrator</ref> this kernel is being used for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forcesAreValid</parametername>
</parameternamelist>
<parameterdescription>
<para>if the context has been modified since the last time step, this will be false to show that cached forces are invalid and must be recalculated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1aaa341747dd5ead7aef98e8920d7c4494" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::setPositions</definition>
        <argsstring>(int copy, const std::vector&lt; Vec3 &gt; &amp;positions)=0</argsstring>
        <name>setPositions</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the positions of all particles in one copy of the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1a5330bbf8540648329e7c2df260648cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::setVelocities</definition>
        <argsstring>(int copy, const std::vector&lt; Vec3 &gt; &amp;velocities)=0</argsstring>
        <name>setVelocities</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the velocities of all particles in one copy of the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1IntegrateNEBStepKernel_1afbd6eaa463c464604559f0cf51172b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::IntegrateNEBStepKernel::copyToContext</definition>
        <argsstring>(int copy, ContextImpl &amp;context)=0</argsstring>
        <name>copyToContext</name>
        <param>
          <type>int</type>
          <declname>copy</declname>
        </param>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy positions and velocities for one copy into the context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKernels.h" line="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" line="14" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/neb/openmmapi/include/openmm/NEBKerenls.h" bodystart="14" bodyend="49"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1afbd6eaa463c464604559f0cf51172b88" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>copyToContext</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1afbd6eaa463c464604559f0cf51172b88" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>copyToContext</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a1f880b395764564fbe2e981ea55bedc1" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>execute</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a1f880b395764564fbe2e981ea55bedc1" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>execute</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a08ca40d95d1835ef8e2b439b06a931ba" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a08ca40d95d1835ef8e2b439b06a931ba" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1afd7791e2d60ec4afa3493cde1c2e5631" prot="public" virt="non-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>IntegrateNEBStepKernel</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1afd7791e2d60ec4afa3493cde1c2e5631" prot="public" virt="non-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>IntegrateNEBStepKernel</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1ac2a4305daa11b36cb997abff01e02b36" prot="public" virt="non-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>Name</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1ac2a4305daa11b36cb997abff01e02b36" prot="public" virt="non-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>Name</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1aaa341747dd5ead7aef98e8920d7c4494" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>setPositions</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1aaa341747dd5ead7aef98e8920d7c4494" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>setPositions</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a5330bbf8540648329e7c2df260648cf8" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>setVelocities</name></member>
      <member refid="classOpenMM_1_1IntegrateNEBStepKernel_1a5330bbf8540648329e7c2df260648cf8" prot="public" virt="pure-virtual"><scope>OpenMM::IntegrateNEBStepKernel</scope><name>setVelocities</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
