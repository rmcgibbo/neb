<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1RBTorsionForceImpl" kind="class" prot="public">
    <compoundname>OpenMM::RBTorsionForceImpl</compoundname>
    <basecompoundref refid="classOpenMM_1_1ForceImpl" prot="public" virt="non-virtual">OpenMM::ForceImpl</basecompoundref>
    <includes refid="RBTorsionForceImpl_8h" local="no">RBTorsionForceImpl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1RBTorsionForceImpl_1a6333d6aadac157db981ebc73a9e5bce0" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1RBTorsionForce" kindref="compound">RBTorsionForce</ref> &amp;</type>
        <definition>RBTorsionForce&amp; OpenMM::RBTorsionForceImpl::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="66" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1RBTorsionForceImpl_1a141a1871ebde90543658a1696888f822" prot="private" static="no" mutable="no">
        <type>Kernel</type>
        <definition>Kernel OpenMM::RBTorsionForceImpl::kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="67" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1a550637c1f9acfcfbe6535d59985825af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::RBTorsionForceImpl::RBTorsionForceImpl</definition>
        <argsstring>(RBTorsionForce &amp;owner)</argsstring>
        <name>RBTorsionForceImpl</name>
        <param>
          <type><ref refid="classOpenMM_1_1RBTorsionForce" kindref="compound">RBTorsionForce</ref> &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1aa4be87412de4ad03cf00ef48ecbf3ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::RBTorsionForceImpl::~RBTorsionForceImpl</definition>
        <argsstring>()</argsstring>
        <name>~RBTorsionForceImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1a368547945a034e58e04676a491d6328d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::RBTorsionForceImpl::initialize</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a0a1f85a9c94613577399c1fada6ecb01">initialize</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called after the <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> is created and before <ref refid="classOpenMM_1_1RBTorsionForceImpl_1a59fe65d8eaf0e040c2858bf140d178b5" kindref="member">updateContextState()</ref>, calcForces(), or calcEnergy() is called on it. This allows it to do any necessary initialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1a225a42c4694f85e6763e8506965299fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classOpenMM_1_1RBTorsionForce" kindref="compound">RBTorsionForce</ref> &amp;</type>
        <definition>RBTorsionForce&amp; OpenMM::RBTorsionForceImpl::getOwner</definition>
        <argsstring>()</argsstring>
        <name>getOwner</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a766c966d25ad0d8cf287ee07e524a081">getOwner</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object from which this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> was created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="53" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1a59fe65d8eaf0e040c2858bf140d178b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::RBTorsionForceImpl::updateContextState</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>updateContextState</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1aae2f5cc793b7071cb6516a02fa736087">updateContextState</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called at the beginning of each time step. It give the <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> a chance to modify the state variables (positions, velocities, and parameters) stored in the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> in arbitrary ways before integration is performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which the system is being simulated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="56" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1a6cf575efdef9110a54debd13a0fe9520" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::RBTorsionForceImpl::calcForcesAndEnergy</definition>
        <argsstring>(ContextImpl &amp;context, bool includeForces, bool includeEnergy, int groups)</argsstring>
        <name>calcForcesAndEnergy</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a1e2544ac6d58460a79697236e8b758be">calcForcesAndEnergy</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeForces</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeEnergy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the force on each particle generated by this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> and/or this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref>&apos;s contribution to the potential energy of the system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which the system is being simulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeForces</parametername>
</parameternamelist>
<parameterdescription>
<para>true if forces should be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the energy should be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groups</parametername>
</parameternamelist>
<parameterdescription>
<para>a set of bit flags for which force groups to include. Group i should be included if (groups&amp;(1&lt;&lt;i)) != 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this force&apos;s contribution to the potential energy of the system, or 0 if this force does not contribute to potential energy (or if includeEnergy is false) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1aa8d53f25d69e8635e8e2bf12af6edf32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::map&lt; std::string, double &gt;</type>
        <definition>std::map&lt;std::string, double&gt; OpenMM::RBTorsionForceImpl::getDefaultParameters</definition>
        <argsstring>()</argsstring>
        <name>getDefaultParameters</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1adf18979257a14b23dd52dbda9e87c308">getDefaultParameters</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a map containing the default values for all adjustable parameters defined by this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref>. These parameters and their default values will automatically be added to the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="60" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1aea8fecb86203ac846cff02a5cd5b2380" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; OpenMM::RBTorsionForceImpl::getKernelNames</definition>
        <argsstring>()</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a5820facb44adaab79bbb02a3ba5bd79b">getKernelNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1RBTorsionForceImpl_1ab8b1554228de15cf7d2dc535b3bd0918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::RBTorsionForceImpl::updateParametersInContext</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>updateParametersInContext</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the internal implementation of <ref refid="classOpenMM_1_1RBTorsionForce" kindref="compound">RBTorsionForce</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="473">
        <label>OpenMM::ForceImpl</label>
        <link refid="classOpenMM_1_1ForceImpl"/>
      </node>
      <node id="472">
        <label>OpenMM::RBTorsionForceImpl</label>
        <link refid="classOpenMM_1_1RBTorsionForceImpl"/>
        <childnode refid="473" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="475">
        <label>OpenMM::ForceImpl</label>
        <link refid="classOpenMM_1_1ForceImpl"/>
      </node>
      <node id="474">
        <label>OpenMM::RBTorsionForceImpl</label>
        <link refid="classOpenMM_1_1RBTorsionForceImpl"/>
        <childnode refid="475" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" line="48" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/RBTorsionForceImpl.h" bodystart="48" bodyend="68"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a6cf575efdef9110a54debd13a0fe9520" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>calcForcesAndEnergy</name></member>
      <member refid="classOpenMM_1_1ForceImpl_1aaa19783e47e53df34083cbaadf37e41c" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>getBondedParticles</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1aa8d53f25d69e8635e8e2bf12af6edf32" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>getDefaultParameters</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1aea8fecb86203ac846cff02a5cd5b2380" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a225a42c4694f85e6763e8506965299fa" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>getOwner</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a368547945a034e58e04676a491d6328d" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a141a1871ebde90543658a1696888f822" prot="private" virt="non-virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>kernel</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a6333d6aadac157db981ebc73a9e5bce0" prot="private" virt="non-virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a550637c1f9acfcfbe6535d59985825af" prot="public" virt="non-virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>RBTorsionForceImpl</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1a59fe65d8eaf0e040c2858bf140d178b5" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>updateContextState</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1ab8b1554228de15cf7d2dc535b3bd0918" prot="public" virt="non-virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>updateParametersInContext</name></member>
      <member refid="classOpenMM_1_1ForceImpl_1a8a2bccbabb2587111b46da67cea8293c" prot="public" virt="virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>~ForceImpl</name></member>
      <member refid="classOpenMM_1_1RBTorsionForceImpl_1aa4be87412de4ad03cf00ef48ecbf3ef5" prot="public" virt="non-virtual"><scope>OpenMM::RBTorsionForceImpl</scope><name>~RBTorsionForceImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
