<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel" kind="class" prot="public">
    <compoundname>OpenMM::CalcAmoebaInPlaneAngleForceKernel</compoundname>
    <includes refid="amoebaKernels_8h" local="no">amoebaKernels.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1ad8279b752ad8f445eea2f286f29accd3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string OpenMM::CalcAmoebaInPlaneAngleForceKernel::Name</definition>
        <argsstring>()</argsstring>
        <name>Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="133" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" bodystart="133" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1abebeb4c4a3d8598dad6a3def726fe4a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CalcAmoebaInPlaneAngleForceKernel::CalcAmoebaInPlaneAngleForceKernel</definition>
        <argsstring>(std::string name, const Platform &amp;platform)</argsstring>
        <name>CalcAmoebaInPlaneAngleForceKernel</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1Platform" kindref="compound">Platform</ref> &amp;</type>
          <declname>platform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="137" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1adca465fb6bd02b893188bddf25f79db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::CalcAmoebaInPlaneAngleForceKernel::initialize</definition>
        <argsstring>(const System &amp;system, const AmoebaInPlaneAngleForce &amp;force)=0</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> &amp;</type>
          <declname>system</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1AmoebaInPlaneAngleForce" kindref="compound">AmoebaInPlaneAngleForce</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the kernel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> this kernel will be applied to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1AmoebaInPlaneAngleForce" kindref="compound">AmoebaInPlaneAngleForce</ref> this kernel will be used for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1a884be8d924f2003b7dd94a86b99e58f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double OpenMM::CalcAmoebaInPlaneAngleForceKernel::execute</definition>
        <argsstring>(ContextImpl &amp;context, bool includeForces, bool includeEnergy)=0</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeForces</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeEnergy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the kernel to calculate the forces and/or energy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which to execute this kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeForces</parametername>
</parameternamelist>
<parameterdescription>
<para>true if forces should be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the energy should be calculated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the potential energy due to the force </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1a90eba3436f28273875c24020c180b7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::CalcAmoebaInPlaneAngleForceKernel::copyParametersToContext</definition>
        <argsstring>(ContextImpl &amp;context, const AmoebaInPlaneAngleForce &amp;force)=0</argsstring>
        <name>copyParametersToContext</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1AmoebaInPlaneAngleForce" kindref="compound">AmoebaInPlaneAngleForce</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy changed parameters over to a context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to copy parameters to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1AmoebaInPlaneAngleForce" kindref="compound">AmoebaInPlaneAngleForce</ref> to copy the parameters from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This kernel is invoked by <ref refid="classOpenMM_1_1AmoebaInPlaneAngleForce" kindref="compound">AmoebaInPlaneAngleForce</ref> to calculate the forces acting on the system and the energy of the system. </para>    </detaileddescription>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" line="129" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/plugins/amoeba/openmmapi/include/openmm/amoebaKernels.h" bodystart="129" bodyend="164"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1abebeb4c4a3d8598dad6a3def726fe4a2" prot="public" virt="non-virtual"><scope>OpenMM::CalcAmoebaInPlaneAngleForceKernel</scope><name>CalcAmoebaInPlaneAngleForceKernel</name></member>
      <member refid="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1a90eba3436f28273875c24020c180b7b7" prot="public" virt="pure-virtual"><scope>OpenMM::CalcAmoebaInPlaneAngleForceKernel</scope><name>copyParametersToContext</name></member>
      <member refid="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1a884be8d924f2003b7dd94a86b99e58f2" prot="public" virt="pure-virtual"><scope>OpenMM::CalcAmoebaInPlaneAngleForceKernel</scope><name>execute</name></member>
      <member refid="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1adca465fb6bd02b893188bddf25f79db5" prot="public" virt="pure-virtual"><scope>OpenMM::CalcAmoebaInPlaneAngleForceKernel</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1CalcAmoebaInPlaneAngleForceKernel_1ad8279b752ad8f445eea2f286f29accd3" prot="public" virt="non-virtual"><scope>OpenMM::CalcAmoebaInPlaneAngleForceKernel</scope><name>Name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
