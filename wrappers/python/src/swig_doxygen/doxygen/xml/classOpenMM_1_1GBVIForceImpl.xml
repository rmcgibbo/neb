<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classOpenMM_1_1GBVIForceImpl" kind="class" prot="public">
    <compoundname>OpenMM::GBVIForceImpl</compoundname>
    <basecompoundref refid="classOpenMM_1_1ForceImpl" prot="public" virt="non-virtual">OpenMM::ForceImpl</basecompoundref>
    <includes refid="GBVIForceImpl_8h" local="no">GBVIForceImpl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1GBVIForceImpl_1a66a2fa15655cfbd976f2389dbf177f5f" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1GBVIForce" kindref="compound">GBVIForce</ref> &amp;</type>
        <definition>GBVIForce&amp; OpenMM::GBVIForceImpl::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="71" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1GBVIForceImpl_1ad2344893b2ce0eff9b00ce0025a96088" prot="private" static="no" mutable="no">
        <type>Kernel</type>
        <definition>Kernel OpenMM::GBVIForceImpl::kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="72" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1a7a2eb4c07489194c517060d7d919bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::GBVIForceImpl::GBVIForceImpl</definition>
        <argsstring>(GBVIForce &amp;owner)</argsstring>
        <name>GBVIForceImpl</name>
        <param>
          <type><ref refid="classOpenMM_1_1GBVIForce" kindref="compound">GBVIForce</ref> &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1a69c6a44be37f8fed33b13a0315da1eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::GBVIForceImpl::initialize</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a0a1f85a9c94613577399c1fada6ecb01">initialize</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called after the <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> is created and before <ref refid="classOpenMM_1_1GBVIForceImpl_1a2af1c42cd45f3b3de5ecd4ce03c671b1" kindref="member">updateContextState()</ref>, calcForces(), or calcEnergy() is called on it. This allows it to do any necessary initialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1aeb7638ca7271a0126eed85e6e249c7b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classOpenMM_1_1GBVIForce" kindref="compound">GBVIForce</ref> &amp;</type>
        <definition>GBVIForce&amp; OpenMM::GBVIForceImpl::getOwner</definition>
        <argsstring>()</argsstring>
        <name>getOwner</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a766c966d25ad0d8cf287ee07e524a081">getOwner</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object from which this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> was created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="50" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1addbe1dc8b78a170cb90df7c5ec86b8f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::GBVIForceImpl::findScaledRadii</definition>
        <argsstring>(int numberOfParticles, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;bondIndices, const std::vector&lt; double &gt; &amp;bondLengths, std::vector&lt; double &gt; &amp;scaledRadii) const </argsstring>
        <name>findScaledRadii</name>
        <param>
          <type>int</type>
          <declname>numberOfParticles</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
          <declname>bondIndices</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>bondLengths</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>scaledRadii</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1aa1b8e9a0ae30dd622e16142feaf29546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::GBVIForceImpl::getBondsFromForces</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>getBondsFromForces</name>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1a2af1c42cd45f3b3de5ecd4ce03c671b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::GBVIForceImpl::updateContextState</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>updateContextState</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1aae2f5cc793b7071cb6516a02fa736087">updateContextState</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called at the beginning of each time step. It give the <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> a chance to modify the state variables (positions, velocities, and parameters) stored in the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> in arbitrary ways before integration is performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which the system is being simulated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="62" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1a153197ad7ce80d9c73c8e69304f347c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::GBVIForceImpl::calcForcesAndEnergy</definition>
        <argsstring>(ContextImpl &amp;context, bool includeForces, bool includeEnergy, int groups)</argsstring>
        <name>calcForcesAndEnergy</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a1e2544ac6d58460a79697236e8b758be">calcForcesAndEnergy</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1ContextImpl" kindref="compound">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeForces</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeEnergy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the force on each particle generated by this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref> and/or this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref>&apos;s contribution to the potential energy of the system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the context in which the system is being simulated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeForces</parametername>
</parameternamelist>
<parameterdescription>
<para>true if forces should be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>includeEnergy</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the energy should be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groups</parametername>
</parameternamelist>
<parameterdescription>
<para>a set of bit flags for which force groups to include. Group i should be included if (groups&amp;(1&lt;&lt;i)) != 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this force&apos;s contribution to the potential energy of the system, or 0 if this force does not contribute to potential energy (or if includeEnergy is false) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1a656d350798cdd03e96e2ea29e3fba2e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::map&lt; std::string, double &gt;</type>
        <definition>std::map&lt;std::string, double&gt; OpenMM::GBVIForceImpl::getDefaultParameters</definition>
        <argsstring>()</argsstring>
        <name>getDefaultParameters</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1adf18979257a14b23dd52dbda9e87c308">getDefaultParameters</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a map containing the default values for all adjustable parameters defined by this <ref refid="classOpenMM_1_1ForceImpl" kindref="compound">ForceImpl</ref>. These parameters and their default values will automatically be added to the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="66" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1GBVIForceImpl_1af6f081fee0fa8d6068019d964b8d3fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; OpenMM::GBVIForceImpl::getKernelNames</definition>
        <argsstring>()</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1ForceImpl_1a5820facb44adaab79bbb02a3ba5bd79b">getKernelNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the internal implementation of <ref refid="classOpenMM_1_1GBVIForce" kindref="compound">GBVIForce</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="336">
        <label>OpenMM::GBVIForceImpl</label>
        <link refid="classOpenMM_1_1GBVIForceImpl"/>
        <childnode refid="337" relation="public-inheritance">
        </childnode>
      </node>
      <node id="337">
        <label>OpenMM::ForceImpl</label>
        <link refid="classOpenMM_1_1ForceImpl"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="338">
        <label>OpenMM::GBVIForceImpl</label>
        <link refid="classOpenMM_1_1GBVIForceImpl"/>
        <childnode refid="339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="339">
        <label>OpenMM::ForceImpl</label>
        <link refid="classOpenMM_1_1ForceImpl"/>
      </node>
    </collaborationgraph>
    <location file="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" line="46" bodyfile="/home/rmcgibbo/OpenMM5.0-Source/openmmapi/include/openmm/internal/GBVIForceImpl.h" bodystart="46" bodyend="73"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a153197ad7ce80d9c73c8e69304f347c9" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>calcForcesAndEnergy</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1addbe1dc8b78a170cb90df7c5ec86b8f2" prot="public" virt="non-virtual"><scope>OpenMM::GBVIForceImpl</scope><name>findScaledRadii</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a7a2eb4c07489194c517060d7d919bd84" prot="public" virt="non-virtual"><scope>OpenMM::GBVIForceImpl</scope><name>GBVIForceImpl</name></member>
      <member refid="classOpenMM_1_1ForceImpl_1aaa19783e47e53df34083cbaadf37e41c" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>getBondedParticles</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1aa1b8e9a0ae30dd622e16142feaf29546" prot="public" virt="non-virtual"><scope>OpenMM::GBVIForceImpl</scope><name>getBondsFromForces</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a656d350798cdd03e96e2ea29e3fba2e6" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>getDefaultParameters</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1af6f081fee0fa8d6068019d964b8d3fe2" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1aeb7638ca7271a0126eed85e6e249c7b7" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>getOwner</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a69c6a44be37f8fed33b13a0315da1eea" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1ad2344893b2ce0eff9b00ce0025a96088" prot="private" virt="non-virtual"><scope>OpenMM::GBVIForceImpl</scope><name>kernel</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a66a2fa15655cfbd976f2389dbf177f5f" prot="private" virt="non-virtual"><scope>OpenMM::GBVIForceImpl</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1GBVIForceImpl_1a2af1c42cd45f3b3de5ecd4ce03c671b1" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>updateContextState</name></member>
      <member refid="classOpenMM_1_1ForceImpl_1a8a2bccbabb2587111b46da67cea8293c" prot="public" virt="virtual"><scope>OpenMM::GBVIForceImpl</scope><name>~ForceImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
